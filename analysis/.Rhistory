source("local-functions.R")
unique(df$condition)
names(df)
df = get_data()
unique(df$condition)
df
names(df)
unique(df$configuration)
slf()
df = get_data()
names(df)
df$dbscond
names(df)
slf()
df
unique(df$dbscond)
!unique(df$dbscond) %in% "OFF"
?outer
outer(c("a","b"), c("d","e"), paste(x,y))
?outer
outer(c("a","b"), c("d","e"), paste())
outer(c("a","b"), c("d","e"), paste)
unique(df$test)
class(loc$dvnames)
class(dbsconds)
dbsconds
dbsconds
df$dbscond
df$configuratoin
df$configuration
df = get_data()
dbsconds
slf()
df = get_data()
dbsconds
df$dbsconds
df$dbscond
unique(df$dbscond)
dbsconds
!unique(df$dbscond) %in% "OFF")
!unique(df$dbscond %in% "OFF")
unique(df$dbscond)
unique(df$dbscond)[!(unique(df$dbscond) %in% "OFF")]
unique(df$dbscond)[!unique(df$dbscond) %in% "OFF"]
dbsconds
Q
m
ls()
cond
dv
paste(cond, dv)
Q
loc
loc$dvnames
dbsconds
outer(loc$dvnames, dbsconds, paste)
outer(loc$dvnames, dbsconds, function(x,y){print(paste(x,y))})
dump = outer(loc$dvnames, dbsconds, function(x,y){cat(paste(x,y))})
dump = outer(loc$dvnames, dbsconds, function(x,y){cat(paste(x,y,"\n"))})
outer(loc$dvnames, dbsconds, function(x,y){cat(paste(x,y,"\n"))})
dvnames
loc$dvnames
conds
dbsconds
outer(loc$dvnames, dbsconds, function(x,y){cat(paste(x,y,"\n")); return(NULL)})
?traceback
traceback
traceback()
traceback()
outer(loc$dvnames, dbsconds, function(x,y){cat(paste(x,y,"\n")); return(NULL)})
traceback()
traceback(3)
outer(loc$dvnames, dbsconds, function(x,y){cat(paste(x,y,"\n")); return(NULL)})
traceback(3)
options(error = function() traceback(3))
outer(loc$dvnames, dbsconds, function(x,y){cat(paste(x,y,"\n")); return(NULL)})
outer(loc$dvnames, dbsconds, function(x,y){cat(paste(x,y,"\n"))})
?outer
?outer
class(loc$dvnames)
outer(loc$dvnames, dbsconds, function(x,y){cat(paste(x,y,"\n"))})
outer(c("a","b"), c("d","e"), function(x,y){cat(paste(x,y,"\n"))})
dim(c("a","b"))
?dim
a = c("a","b")
b = a
dim(a) <- c(1,2)
dim(b)
dim(b) <- c(1,2)
dim(b)
outer(a,b, function(x,y){cat(paste(x,y,"\n"))})
outer(c(1,2), c(3,4), function(x,y){cat(paste(x,y,"\n"))})
outer(c(1,2), c(3,4))
outer(c(1,2), c(3,4), function(x,y){cat(paste(x,y,"\n")); return(1)})
outer(c(1,2), c(3,4), function(x,y){cat(paste(x,y,"\n")); return(outer(c(1,2), c(3,4)))})
?expand.grid
loc$dvnames
expand.grid(loc$dvnames)
expand.grid(loc$dvnames, dbsconds)
summary(m)
m2 = lme( formula(paste(dv, "configuration", sep = "~"))

         , random = ~1|id
         , data = subset(df, dbscond == cond & !grepl("tug", test))
         , method = "ML"
         , na.action = na.omit
        )
m2
summary(m2)
anova(m,m2)
Q
m0
summary(m0)
anova(m0,m1)
Q


df
df$dv
names(df)
df$dv = df[["mean_stride_time_s"]]
df$dv
str(df)
m0 = lme(dv~1, random = ~1|id, data = subset(df, dbscond == "pulse" & !grepl("tug", test)), method = "ML", na.action = na.omit)
summary(m0)
m0 = lme(dv~test, random = ~1|id, data = subset(df, dbscond == "pulse" & !grepl("tug", test)), method = "ML", na.action = na.omit)
m1 = lme(dv~1, random = ~1|id, data = subset(df, dbscond == "pulse" & !grepl("tug", test)), method = "ML", na.action = na.omit)
anova(m0,m1)
source('stat_dv_by_dbscondition_for_gait.R')
source('stat_dv_by_dbscondition_for_gait.R')
df
m0 = lme(dv~1, random = ~1|id, data = subset(df, dbscond == cond & !grepl("tug", test)), method = "ML", na.action = na.omit)
con
cond
subset(df, dbscond == cond & !grepl("tug", test))
df$dv
dv
str(df)
class(df$dv)
df$dv
dv
class(dv)
?expand.grid
df$dv
summary(m0)
summary(m1)
unique(df$test)
contrasts(df$test)
summary(m1)
anova(m0,m1)
data = subset(df, dbscond == cond & !grepl("tug", test))
contrasts(as.factor(data$test))
anova(m1,m2)
anova(m2,m3)
anova(m0,m1)$p.value[2]
names(anova(m0,m1))
anova(m0,m1)$p-value[2]
anova(m0,m1)["p-value"][2]
a = anova(m0,m1)
names(a)
a$p-value
a[["p-value"]]
a[["p-value"]][2]
Q
!
Q
?mapply
res
results
unlist(results)
do.call(cbind, results)
do.call(rbind, results)
do.call(c, results)
results
results[1]
results[[1]]
str(results)
results
str(results)
results[1]
dv
class(dv)
Q
?mapply
?mapply
results
do.call(c, results)
results
str(results)
do.call(rbind, results)
dff = do.call(rbind, results)
names(dff)
class(fdf)
class(dff)
as.data.frame(dff)
class(dff)
dff
dim(dff)
names(dff)
?rbind
dff = do.call(rbind, results, deparse.level = 1)
?do.call
results
class(results)
results[1]
mapply(c, results, SIMPLIFY = FALSE)
mapply(cbind, results, SIMPLIFY = FALSE)
mapply(rbind, results, SIMPLIFY = FALSE)
mapply(rbind, results, SIMPLIFY = TRUE)
results
?data.frame
results
do.call(rbind, results)
dff = do.call(rbind, results)
class(dff)
names(dff)
do.call
?do.call
results
results
subset(results, p.condition < .05)
subset(results, p.interaction < .05)
subset(results, p.test < .05)
subset(results, p.condition < .05)
names(results)
subset(results, p.condition < .05)[, c("dv","condition","p.condition")]
rownames(results) <- c()
subset(results, p.condition < .05)[, c("dv","condition","p.condition")]
prettyNum(results$p.condition)
?prettyNum
formatC(results$p.condition, digits = 3, format = "%f")
formatC(results$p.condition, digits = 3, format = "f")
 results$pcond = formatC(results$p.condition, digits = 3, format = "f")
subset(results, p.condition < .05)[, c("dv","condition","pcond")]
length(results)
nrow(results)
0.05/81
subset(results, p.condition < 0.05/nrow(results))[, c("dv","condition","pcond")]
